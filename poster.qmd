---
title: "Mapping Crime in the Los Angeles: A Visual Journey (2020-2024)"
format:
  poster-typst: 
    size: "33x23" # Approximately A1
    poster-authors: "Team Cyan"
    departments: "Information and Communication Technologies"
    institution-logo: "./imgs/sit-logo.png"
    footer-text: "Information Visualization 2024"
    footer-emails: "singaporetech.edu.sg"
execute:
  echo: false
knitr:
  opts_chunk:
    dev: svglite
---

```{r}
#| label: setup
#| include: false

library(knitr)
purl("CrimeDataVisualization.qmd")
source("poster_prep.R")
source("CrimeDataVisualization.R")
```

# Introduction
Crime in america is a significant concern , the safety and well-being of residents, business and touristism will be impacted severely. There is a sharp rise in motor vehicle thefts is up 25% from 2019 to 2022[^usa_car_theft_2022] showing that there is still plenty of improvement required to curb the crime rate.

Understanding and identifying area with high type of crime are can help the effort of effective law enforcement training and perpetration. Data constantly shows that neighborhoods such as South Los Angeles are still prevalent with violent crime[^california_2023]. Using statistical past data , using quantifiable information to identify hotspots allows law enforcement agencies allowing efficient dividing of resource better while maximizing safety.

[^usa_car_theft_2022]: <https://www.marketwatch.com/guides/insurance-services/car-theft-statistics/>
[^california_2023]: <https://www.latimes.com/california/story/2023-10-12/violent-crime-is-down-fear-is-up-why-is-la-perceived-as-dangerous>

Taking a look at a crime distribution around the University of Southern Californiaâ€™s University Park campus on medium [^debold_battling_2015] (@fig-wsj-on-poster). This visualization is display see through blue dots to represent a hit in crime on a specific area, while straight to the point however there are several aspects of the plot can be refine.

[^debold_battling_2015]: <https://towardsdatascience.com/visualizing-crime-in-los-angeles-14db37572909/>
[^lee_reproducing_2017]: <https://www.mikelee.co/posts/2017-06-28-wsj-measles-vaccination-chart>
# Previous Visualization

```{r}
#| label: fig-wsj-on-poster
#| fig-cap: "Crime distribution around USC, published by the Medium."
#| out-width: 100%

include_graphics("imgs/bad_graph.jpeg")
```


# Strengths

*   Alpha was used on the circles allowing darker spots to appear if overlapped.
*   Gentle color blue was used, allowing user to easily view spots affected by a crime. The color picked do not have conflicting color with background of the map which was a nice touch.
*   An area with good distribution was picked, as there is clusters displayed on the map.

# Suggested Improvements

1.  *State layer view* separated with area code, performs better visualization of the crime distribution. A localize view does not represent a crime spread well for meaningful actions.
1.  *Identify type of crime clearly.* A clearer view of top crime should be labeled and display.

1.  *Add missing title and guides.* Title should be used for clear description
1.  *Add missing guides.* Guides should be used to show clear distinction of color shade to total crime count.
1.  *Use a saturation color palette.* Shows a meaningful progression
    through color space. Saturation palettes shows cold to hot zone allowing human to see intensity of an area.
1.  *Label well known locations.* Labeling popular city center allow enforcer to see crime distribution vs density area. *Want ??*

# Improved Visualization

```{r}
#| label: improved-visualization
#| fig-cap: "Top 5 crimes and total crimes by area."
#| fig-width: 10.0
#| fig-height: 10.0
#| out-width: 100%

# Load the required packages
library(pals)
library(RColorBrewer)
library(ggrepel)

# Define a set of colors to use for each crime type from the pals package
color_values <- glasbey(n = 10)
glasbey_colors <- glasbey()

# Define the indices of colors to replace and their new values
replace_indices <- c(2, 3,4, 8, 6, 5, 9)  # Indices of the colors you want to replace
new_colors <- c("#00FF00", "#911eb4","#ff00f2", "#dcbeff", "#aaffc3","#131342","#42d4f4")  # New colors to replace the existing ones

# Replace specific colors
custom_colors <- glasbey_colors
custom_colors[replace_indices] <- new_colors

# Ensure the palette has exactly 10 colors by selecting the first 10 colors after replacement
custom_colors <- custom_colors[1:10]

# Plot the number of top 5 crimes and total crimes in each area map using geom_sf
top_crime_codes_by_area_map_sf <- ggplot() +
  geom_sf(data = la_count, aes(fill = Crime_Count)) +
  geom_segment(data = top_crimes_la_count, 
               aes(x = long_center, y = lat_center, xend = jittered_long, yend = jittered_lat, color = factor(Crm.Cd.Desc))) + 
  geom_point(data = la_count, aes(x = long_center - 500, y = lat_center - 500), color = "black", size = 3, show.legend = FALSE) +
  geom_point(data = top_crimes_la_count, 
             aes(x = jittered_long, y = jittered_lat, color = factor(Crm.Cd.Desc)), 
             size = 6) +  # Use shape 21 to allow both fill and color
  geom_point(data = top_crimes_la_count, 
             aes(x = jittered_long, y = jittered_lat), 
             color = "black", size = 5 + 1, shape = 21, stroke = 1, show.legend = FALSE) +  geom_text_repel(data = la_count, 
                  aes(x = long_center, y = lat_center, label = AREA_ABBREV), 
                  color = ifelse(la_count$Crime_Count > 45000, "white", "black"), 
                  size = 5, show.legend = FALSE, fontface = "bold",
                  nudge_y = 0.5, 
                  nudge_x = 0.5) +  # Add geom_text_repel for area labels
  scale_color_manual(name = "Crime Type", values = custom_colors) +  # Use color_manual for points and segments
  scale_fill_distiller(palette = "OrRd", 
                       name = "Total Crime Count",
                       limits = c(25000, 65000),
                       breaks = c(30000, 40000, 50000, 60000),
                       labels = c("30k", "40k", "50k", "60k"),
                       direction = 1) +
  theme_minimal() +
  labs(title = "Top 3 Crimes and Total Crimes by Area in Los Angeles", caption = "Source: LAPD Divisions") +
  theme(
    plot.title = element_text(size = 20, hjust = 0.5, margin = margin(b = -20)), 
    axis.title.x = element_blank(),  
    axis.title.y = element_blank(),  
    axis.text.x = element_blank(),   
    axis.text.y = element_blank(),   
    axis.ticks.x = element_blank(),  
    axis.ticks.y = element_blank(),  
    panel.grid.major = element_blank(),  
    panel.grid.minor = element_blank(),
    legend.title = element_text(size = 15),  
    legend.text = element_text(size = 15),
    legend.position = "bottom",
    plot.caption = element_text(size = 12, hjust = 0.5),
    legend.box.margin = margin(-60, 0, 0, 0),
    plot.margin = margin(0, 0, 0, 0)  # Reduce space around the plot
  ) +
  guides(
    fill = guide_colorbar(barwidth = 10, barheight = 2, title.position = "top", order = 2),  # Adjust the size of the color bar and place it first
    colour = guide_legend(override.aes = list(size = 6), direction = "vertical", order = 3),  # Adjust the size of the points in the legend

  )
# Display the plot
#top_crime_codes_by_area_map_sf

ggsave("imgs/plot.png", plot = top_crime_codes_by_area_map_sf, width = 20, height = 20, units = "in")

```

```{r}
#| label: fixed-poster
#| fig-cap: "Top 3 crimes and total crimes by area."
#| out-width: 100%

include_graphics("imgs/plot.png")
```

```{=typst}
#v(2em)
```
# Implementation

## Data

*   Los Angelas year 1st January 2020 to 7th June 2024.[^crime_data_2020] The data used is the universal data while @fig-wsj-on-poster use a subset of the data ending at 2021.The data set are broken apart to 10 years data set 2010 to 2019 [^crime_data_2010] however different format might be implement hence not used.


[^crime_data_2020]: <https://data.lacity.org/Public-Safety/Crime-Data-from-2020-to-Present/2nrs-mtv8/data_preview>
[^crime_data_2010]: <https://catalog.data.gov/dataset/crime-data-from-2010-to-2019>

## Software

We used the Quarto publication framework and the R programming language, along with the following third-party packages:

*   *dplyr* 
*   *ggplot2* 
*   *tidyverse* for data transformation, including *ggplot2* for visualization
    based on the grammar of graphics
*   *readxl* for data import
*   *lubridate* 
*   *DT* 
*   *knitr* for dynamic document generation

# Further Suggestions for Interactivity

To update not changed yet, Because our visualization was intended for a poster, we did not implement any interactive features, including the infotip. However, if the data are visualized in an HTML document, interactive features can be achieved using the R packages such as *plotly*. In that case, we recommend that the tile does not change its fill color. In contrast, the original visualization changes the fill color of the activated tile to light blue (see @fig-infotip_color_change), which can be misinterpreted as a change in incidence. Instead, we suggest highlighting the activated tile by thickening its border.


# Conclusion

To update not changed yet, We successfully implemented all suggested improvements for the non-interactive visualization. By labeling every state and choosing a colorblind-friendly palette, the revised plot is more accessible. The logarithmic color scale makes the decrease in incidence after the introduction of the vaccine less striking but enables readers to detect patterns in the low-incidence range more easily.