---
title: "main"
format: html
editor: visual
---

## 3007 Team Cyan Group Project

Group 3 (CYAN) Members:\
Kahbelan Kalisalvam Kelaver\
Poh Kai Boon\
Goh Yee Kit\
Lau Hui Qi\
See Kai Cong\
Joel Yong\

## Main code

```{r}
# Load necessary libraries
library(dplyr)

library(readxl)
library(lubridate)
library(DT)
library(sf)
```

```{r}
#| label: data import
#| output: false
# Set the path to the CSV file
file_path <- "Crime_Data_from_2020_to_Present_20240607.csv"

# Read the CSV file into a data frame
crime_data <- read.csv(file_path)

# View the first few rows of the data
head(crime_data)
```

```{r}
#| label: data-cleaning - keep selected column
#| output: false

crime_data <- crime_data |>
  select(Date.Rptd, DATE.OCC, TIME.OCC, AREA, AREA.NAME, Rpt.Dist.No, Crm.Cd, Crm.Cd.Desc, Crm.Cd.1, Crm.Cd.2, Crm.Cd.3, Crm.Cd.4, LOCATION, Cross.Street, LAT, LON)

# View the first few rows of the modified data
head(crime_data)
```

```{r}
#| label: data cleaning - remove rows if null for certain column, remove multiple spaces if any

# Remove rows with NA values in the specified columns
cleaned_crime_data <- crime_data %>%
  filter(
    !is.na(Date.Rptd) &
    !is.na(DATE.OCC) &
    !is.na(TIME.OCC) &
    !is.na(AREA) &
    !is.na(AREA.NAME) &
    !is.na(Rpt.Dist.No) &
    !is.na(LOCATION) &
    !is.na(LAT) &
    !is.na(LON)
  )

# Function to replace multiple spaces with a single space in a string
replace_multiple_spaces <- function(x) {
  gsub("\\s+", " ", x)
}

# Apply the function to all character columns in the data frame
cleaned_crime_data <- cleaned_crime_data %>%
  mutate(across(where(is.character), replace_multiple_spaces))

# View the first few rows of the cleaned data
head(cleaned_crime_data)
```

```{r}
#| label: data-formating

# Convert DATE.OCC to Date format
cleaned_crime_data$DATE.OCC <- as.Date(cleaned_crime_data$DATE.OCC, format="%m/%d/%Y %I:%M:%S %p")

# Extract month and year from DATE.OCC
cleaned_crime_data <- cleaned_crime_data %>%
  mutate(
    DATE.OCC.MONTH = month(DATE.OCC),
    DATE.OCC.YEAR = year(DATE.OCC)
  )

cleaned_crime_data <- cleaned_crime_data %>%
  select(Date.Rptd, DATE.OCC, DATE.OCC.MONTH, DATE.OCC.YEAR, everything())

# View the first few rows of the cleaned data with new columns
datatable(head(cleaned_crime_data))
```

```{r}
#| label: data-preparation
#| message: false

#Counts of crime in each area
crime_counts_by_area <- cleaned_crime_data %>%
  mutate(AREA.NAME = toupper(AREA.NAME)) %>%
  group_by(AREA, AREA.NAME) %>%
  summarise(Crime_Count = n(), .groups = 'drop')
crime_counts_by_area[8, "AREA.NAME"] <- "WEST LOS ANGELES"
crime_counts_by_area[15, "AREA.NAME"] <- "NORTH HOLLYWOOD"
crime_counts_by_area
```

```{r}
#Based of crime code, find top 5 crime codes and the corresponding crime description based on each area
top_crime_codes_by_area <- cleaned_crime_data %>%
  group_by(AREA, AREA.NAME, Crm.Cd, Crm.Cd.Desc) %>%
  summarise(Crime_Count = n(), .groups = 'drop') %>%
  arrange(desc(Crime_Count)) %>%
  group_by(AREA, AREA.NAME) %>%
  slice_head(n = 5)

top_crime_codes_by_area
```

```{r}
#| label: data-visualisation
#| message: false

#Plot the number of crimes in each area in a map
library(ggplot2)
#Plot the number of crimes in each area in a map
crime_counts_by_area_map <- crime_counts_by_area %>%
  ggplot(aes(x = AREA, y = AREA.NAME, size = Crime_Count)) +
  geom_point(aes(colour = Crime_Count), alpha = 0.7) +
  scale_size_continuous(range = c(1, 10)) +
  labs(title = "Number of Crimes in Each Area", x = "Area", y = "Area Name") +
  theme_minimal()

crime_counts_by_area_map
```

```{r}
#| label: data-preparation - centroids
#| warning: false

la <- st_read("City_Boundary.geojson")

la_centroids <- la %>%
  st_centroid() %>%
  rename(centroids = geometry) %>%
  st_coordinates() %>%
  as.data.frame() %>%
  setNames(c("long_center", "lat_center")) %>%
  mutate(APREC = la$APREC)

la_count <- la %>%
  left_join(crime_counts_by_area, by = c("APREC" = "AREA.NAME", "PREC" = "AREA")) %>%
  left_join(la_centroids, by = c("APREC" = "APREC"))
```

```{r}
#| label: data-visualisation using geom_sf

la_plot <- ggplot(la_count) +
  geom_sf(aes(fill = Crime_Count)) +
  geom_point(aes(x = long_center, y = lat_center, size = Crime_Count), color = "black", alpha = 0.5) +
  scale_fill_viridis_c(name = "Crime Count", 
                       limits = c(25000, 65000),
                       breaks = c(30000, 40000, 50000, 60000),  # Custom breaks
                       labels = c("30k", "40k", "50k", "60k")) +
  labs(title = "Number of Crimes in Each Area") +
  theme_minimal() +
  theme(
    axis.title.x = element_blank(),  # Remove x-axis title
    axis.title.y = element_blank(),  # Remove y-axis title
    axis.text.x = element_blank(),   # Remove x-axis text
    axis.text.y = element_blank(),   # Remove y-axis text
    axis.ticks.x = element_blank(),  # Remove x-axis ticks
    axis.ticks.y = element_blank(),  # Remove y-axis ticks
    panel.grid.major = element_blank(),  # Remove major grid lines
    panel.grid.minor = element_blank()   # Remove minor grid lines
  )

la_plot
```
